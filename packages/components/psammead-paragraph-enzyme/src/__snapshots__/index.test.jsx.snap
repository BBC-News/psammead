// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mounting, shallow and render tests Paragraph tested with Enzyme shallow render should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForwardRef />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "forwardedComponent": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Paragraph-sc-19yhspj-0",
          "isStatic": true,
          "lastClassName": "epjUaG",
          "rules": Array [
            "color:",
            "#404040",
            ";font-family:",
            "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
            ";padding-bottom:",
            "1rem",
            ";margin:0;",
            "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
            ";",
          ],
        },
        "displayName": "Paragraph",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Paragraph-sc-19yhspj-0",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "forwardedRef": null,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "forwardedComponent": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Paragraph-sc-19yhspj-0",
            "isStatic": true,
            "lastClassName": "epjUaG",
            "rules": Array [
              "color:",
              "#404040",
              ";font-family:",
              "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
              ";padding-bottom:",
              "1rem",
              ";margin:0;",
              "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
              ";",
            ],
          },
          "displayName": "Paragraph",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Paragraph-sc-19yhspj-0",
          "target": "p",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
        "forwardedRef": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Mounting, shallow and render tests Paragraph tested with Enzyme shallow render should render correctly with text 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForwardRef>
    This is text in a paragraph.
  </ForwardRef>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "This is text in a paragraph.",
      "forwardedComponent": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Paragraph-sc-19yhspj-0",
          "isStatic": true,
          "lastClassName": "epjUaG",
          "rules": Array [
            "color:",
            "#404040",
            ";font-family:",
            "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
            ";padding-bottom:",
            "1rem",
            ";margin:0;",
            "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
            ";",
          ],
        },
        "displayName": "Paragraph",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Paragraph-sc-19yhspj-0",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "forwardedRef": null,
    },
    "ref": null,
    "rendered": "This is text in a paragraph.",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "This is text in a paragraph.",
        "forwardedComponent": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Paragraph-sc-19yhspj-0",
            "isStatic": true,
            "lastClassName": "epjUaG",
            "rules": Array [
              "color:",
              "#404040",
              ";font-family:",
              "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
              ";padding-bottom:",
              "1rem",
              ";margin:0;",
              "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
              ";",
            ],
          },
          "displayName": "Paragraph",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Paragraph-sc-19yhspj-0",
          "target": "p",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
        "forwardedRef": null,
      },
      "ref": null,
      "rendered": "This is text in a paragraph.",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Paragraph Enzyme test should render correctly with no props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForwardRef />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "forwardedComponent": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Paragraph-sc-19yhspj-0",
          "isStatic": true,
          "lastClassName": "epjUaG",
          "rules": Array [
            "color:",
            "#404040",
            ";font-family:",
            "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
            ";padding-bottom:",
            "1rem",
            ";margin:0;",
            "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
            ";",
          ],
        },
        "displayName": "Paragraph",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Paragraph-sc-19yhspj-0",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "forwardedRef": null,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "forwardedComponent": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Paragraph-sc-19yhspj-0",
            "isStatic": true,
            "lastClassName": "epjUaG",
            "rules": Array [
              "color:",
              "#404040",
              ";font-family:",
              "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
              ";padding-bottom:",
              "1rem",
              ";margin:0;",
              "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
              ";",
            ],
          },
          "displayName": "Paragraph",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Paragraph-sc-19yhspj-0",
          "target": "p",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
        "forwardedRef": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Paragraph Enzyme test should render correctly with text 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForwardRef>
    This is text in a paragraph.
  </ForwardRef>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "This is text in a paragraph.",
      "forwardedComponent": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Paragraph-sc-19yhspj-0",
          "isStatic": true,
          "lastClassName": "epjUaG",
          "rules": Array [
            "color:",
            "#404040",
            ";font-family:",
            "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
            ";padding-bottom:",
            "1rem",
            ";margin:0;",
            "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
            ";",
          ],
        },
        "displayName": "Paragraph",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Paragraph-sc-19yhspj-0",
        "target": "p",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
      "forwardedRef": null,
    },
    "ref": null,
    "rendered": "This is text in a paragraph.",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "This is text in a paragraph.",
        "forwardedComponent": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Paragraph-sc-19yhspj-0",
            "isStatic": true,
            "lastClassName": "epjUaG",
            "rules": Array [
              "color:",
              "#404040",
              ";font-family:",
              "ReithSansNewsRegular, Helvetica, Arial, sans-serif",
              ";padding-bottom:",
              "1rem",
              ";margin:0;",
              "
  font-size: 0.9375em;
  line-height: 1.25rem;

  @media (min-width: 20em) {
    font-size: 1em;
    line-height: 1.375rem;
  }
",
              ";",
            ],
          },
          "displayName": "Paragraph",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Paragraph-sc-19yhspj-0",
          "target": "p",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
        "forwardedRef": null,
      },
      "ref": null,
      "rendered": "This is text in a paragraph.",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
